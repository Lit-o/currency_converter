{"version":3,"sources":["components/Header/Header.module.css","components/Converter/Converter.module.css","components/Exchange/Exchange.module.css","components/Header/Header.jsx","components/Exchange/Exchange.jsx","api/api.js","redux/exchangeReducer.js","components/Exchange/ExchangeContainer.jsx","components/Converter/Converter.jsx","redux/converterReducer.js","components/Converter/ConverterContainer.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","Header","className","style","ul","link","to","activeClassName","active","Exchange","props","baseApp","userLang","navigator","language","userLanguage","slice","toLowerCase","interests","exchange","filter","el","useEffect","setActualRates","table","actualRates","map","actualBaseApp","base","rates","Main","baseCurrency","instance","axios","baseURL","currencyAPI","baseArr","symbols","result","get","then","response","data","interest","value","console","log","ADD_BASE_CURRENCY","ADD_ACTUAL_RATES","initialState","isFetching","setActualRatesTC","dispatch","type","exchangeReducer","state","action","connect","exchangePage","Converter","useState","setValue","inputSection","autoFocus","onKeyPress","event","key","toUpperCase","requiredValue","parseFloat","getConvert","sendDataToConvert","onChange","e","currentTarget","outputSection","name","undefined","converter","toFixed","CURRENCY_CONVERT","CURRENCY_CONVERT_STATE","getConvertTC","getConvertStateAC","converterReducer","converterPage","App","from","render","ExchangeContainer","exact","path","ConverterContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,GAAK,mBAAmB,KAAO,qBAAqB,OAAS,yB,mBCA/ED,EAAOC,QAAU,CAAC,KAAO,wBAAwB,aAAe,gCAAgC,cAAgB,mC,mBCAhHD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,aAAe,+BAA+B,KAAO,yB,iJCkBtFC,EAhBA,WACX,OACI,iCACI,8BACI,qBAAIC,UAAWC,IAAMC,GAArB,UACI,6BAAI,cAAC,IAAD,CAASF,UAAWC,IAAME,KAAMC,GAAG,YAAYC,gBAAiBJ,IAAMK,OAAtE,8BAEJ,6BAAI,cAAC,IAAD,CAASN,UAAWC,IAAME,KAAMC,GAAG,aAC1BC,gBAAiBJ,IAAMK,OADhC,0C,iBC8CTC,EArDE,SAACC,GAEd,IAGIC,EAHAC,EAAWC,UAAUC,UAAYD,UAAUE,aAI/C,OAHAH,EAAWA,EAASI,MAAM,EAAG,GAAGC,eAI5B,IAAK,KACDN,EAAU,MACV,MAYJ,QACIA,EAAU,YAPd,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACDA,EAAU,MAMlB,IAAIO,EAAYR,EAAMS,SAASD,UAAUE,QAAO,SAAAC,GAAE,OAAIA,IAAOV,KAE7DW,qBAAW,WACPZ,EAAMa,eAAeL,EAAWP,KACjC,IAGH,IAAIa,EAAQd,EAAMS,SAASM,YAAYC,KAAI,SAAAL,GACvC,IAAIM,EAAgBjB,EAAMS,SAASR,QACnC,OAAO,+BAAI,oCAAOU,EAAGO,QAAU,6BAAKP,EAAGQ,MAAMF,WAGjD,OACI,sBAAKzB,UAAWC,IAAM2B,KAAtB,UACI,oBAAI5B,UAAU,iBAAd,4BACA,qBAAKA,UAAWC,IAAM4B,aAAtB,SACI,qDAAwBrB,EAAMS,SAASR,aAE3C,gCACI,kCACI,+BAAI,sCAAa,uCAChBa,W,8BC/CfQ,EAAWC,SAAa,CAC1BC,QAAS,yCAGAC,EAAc,SACXC,EAASC,GACjB,OAAOJ,MAAUG,EAAQV,KAAI,SAAAY,GACzB,OAAON,EAASO,IAAI,SAAWD,EAAS,YAAcD,GACjDG,MAAK,SAAAC,GACF,OAAOA,EAASC,aALvBP,EAAc,SAUfP,EAAMe,EAAUC,GACpB,OAAOZ,EAASO,IAAI,SAAWX,EAAO,YAAce,EAAW,WAAaC,GACvEJ,MAAK,SAAAC,GAEF,OADAI,QAAQC,IAAIL,EAASC,KAAKb,MAAMc,IACzBF,EAASC,KAAKb,MAAMc,OClBrCI,EAAoB,iDACpBC,EAAmB,gDAErBC,EAAe,CACftC,QAAS,MACTO,UAAW,CAAC,MAAM,MAAM,OACxBO,YAAa,GACbyB,YAAY,GA0BHC,EAAmB,SAACjC,EAAWP,GACxC,OAAO,SAACyC,GACJA,EAN4B,CAACC,KAAMN,EAAmBnB,KAMnCjB,IACnBwB,EAAwBjB,EAAWP,GAAS6B,MAAK,SAAAC,GACzCW,EAPkC,CAACC,KAAML,EAAkBvB,YAOjCgB,SAM3Ba,EAjCS,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCACtD,OAAQA,EAAOH,MACX,KAAKN,EACD,OAAO,2BACAQ,GADP,IAEI5C,QAAS6C,EAAO5B,OAGxB,KAAKoB,EACD,OAAO,2BACAO,GADP,IAEI9B,YAAY,YAAK+B,EAAO/B,eAGhC,QACI,OAAO8B,ICTJE,eAdO,SAACF,GACnB,MAAO,CACHpC,SAAUoC,EAAMG,iBAIC,SAACN,GACtB,MAAO,CACH7B,eAAgB,SAACL,EAAWP,GACxByC,EAASD,EAAiBjC,EAAWP,QAKlC8C,CAA6ChD,G,yBCsC7CkD,EApDG,SAACjD,GAEf,MAAwBkD,oBAAS,GAAjC,mBAAKhB,EAAL,KAAYiB,EAAZ,KAmBA,OACI,sBAAK3D,UAAWC,IAAM2B,KAAtB,UACI,oBAAI5B,UAAU,iBAAd,gCACA,sBAAKA,UAAWC,IAAM2D,aAAtB,UACI,iGACI,uBADJ,YAEa,sDAGb,8BACI,uBAAOC,UAAW,OACXC,WArBJ,SAACC,GACC,UAAdA,EAAMC,KARW,SAACtB,GACrB,IAAIhB,EAAOgB,EAAM5B,OAAO,IAAK,GAAGmD,cAC5BxB,EAAWC,EAAM5B,OAAO,GAAGmD,cAC3BC,EAAgBC,WAAWzB,GAC/BlC,EAAM4D,WAAW1C,EAAMe,EAAUyB,GAK7BG,CAAkB3B,IAoBH4B,SAhBH,SAACC,GACjBZ,EAASY,EAAEC,cAAc9B,QAgBNS,KAAK,cAIpB,sBAAKnD,UAAWC,IAAMwE,cAAtB,UACI,uCACA,wBAAQC,KAAK,SAAb,cACiCC,IAA3BnE,EAAMoE,UAAUxC,QAAmD,OAA3B5B,EAAMoE,UAAUxC,OACpD,qBACA5B,EAAMoE,UAAUxC,OAAOyC,QAAQ,YC7CnDC,EAAmB,+CACnBC,EAAyB,qDAE3BhC,EAAe,CACfrB,KAAM,GACNe,SAAU,GACVL,OAAQ,EACRY,YAAY,GA0BHgC,EAAe,SAACtD,EAAMe,EAAUC,GACzC,OAAO,SAACQ,GACJA,EAJyB,SAACxB,EAAMe,GAAP,MAAqB,CAACU,KAAM2B,EAAkBpD,OAAMe,YAIpEwC,CAAkBvD,EAAMe,IACjCR,EAAoBP,EAAMe,EAAUC,GAAOJ,MAAK,SAAAC,GAC5CW,EAP6B,CAACC,KAAM2B,EAAkB1C,OAOhCG,SAMnB2C,EAjCU,WAAmC,IAAlC7B,EAAiC,uDAAzBN,EAAcO,EAAW,uCACvD,OAAQA,EAAOH,MACX,KAAK4B,EACD,OAAO,2BACA1B,GADP,IAEI3B,KAAM4B,EAAO5B,KACbe,SAAUa,EAAOb,WAGzB,KAAKqC,EACD,OAAO,2BACAzB,GADP,IAEIjB,OAAQkB,EAAOlB,SAGvB,QACI,OAAOiB,ICVJE,eAdO,SAACF,GACnB,MAAO,CACHuB,UAAWvB,EAAM8B,kBAIA,SAACjC,GACtB,MAAO,CACHkB,WAAY,SAAC1C,EAAMe,EAAUC,GACzBQ,EAAS8B,EAAatD,EAAMe,EAAUC,QAKnCa,CAA6CE,GCM7C2B,MAjBf,WAKI,OACI,qBAAKpF,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAUqF,KAAK,IAAIjF,GAAG,cACtB,cAAC,IAAD,CAAOkF,OARJ,kBAAM,cAACC,EAAD,KAQgBC,OAAK,EAACC,KAAK,cACpC,cAAC,IAAD,CAAOH,OARH,kBAAM,cAACI,EAAD,KAQgBF,OAAK,EAACC,KAAK,qBCNtCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvD,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCFVO,EAAWC,YAAgB,CACvB5C,aAAcJ,EACd+B,cAAeD,IAMRmB,EAFHC,YAAYH,EAAUI,YAAgBC,M,eCDlDC,EAASnB,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUe,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRK,SAASC,eAAe,SAO5BhB,M","file":"static/js/main.1470a708.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Header_ul__1n8SE\",\"link\":\"Header_link__2sJUu\",\"active\":\"Header_active__3NCl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Converter_Main__bNnNg\",\"inputSection\":\"Converter_inputSection__3ELeq\",\"outputSection\":\"Converter_outputSection__ZGYlL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Exchange_Main__PMXev\",\"baseCurrency\":\"Exchange_baseCurrency__1oVfV\",\"link\":\"Exchange_link__1OYu9\"};","import style from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <ul className={style.ul}>\r\n                    <li><NavLink className={style.link} to=\"/exchange\" activeClassName={style.active}>Exchange\r\n                        rates</NavLink></li>\r\n                    <li><NavLink className={style.link} to=\"/converter\"\r\n                                 activeClassName={style.active}>Currency converter</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import style from \"../Exchange/Exchange.module.css\";\r\nimport {useEffect} from \"react\";\r\n\r\nconst Exchange = (props) => {\r\n\r\n    let userLang = navigator.language || navigator.userLanguage;\r\n    userLang = userLang.slice(0, 2).toLowerCase();\r\n\r\n    let baseApp\r\n    switch (userLang) {\r\n        case 'ru':\r\n            baseApp = \"RUB\";\r\n            break;\r\n\r\n        case 'en':\r\n            baseApp = \"USD\"\r\n            break;\r\n\r\n        case 'de':\r\n        case 'cs':\r\n        case 'fr':\r\n        case 'it':\r\n            baseApp = \"EUR\"\r\n            break;\r\n        default:\r\n            baseApp = \"USD\"\r\n    }\r\n\r\n    let interests = props.exchange.interests.filter(el => el !== baseApp)\r\n\r\n    useEffect( () => {\r\n        props.setActualRates(interests, baseApp);\r\n    }, [])\r\n\r\n\r\n    let table = props.exchange.actualRates.map(el => {\r\n        let actualBaseApp = props.exchange.baseApp\r\n        return <tr><td>1 {el.base}</td><td>{el.rates[actualBaseApp]}</td></tr>\r\n    })\r\n\r\n    return (\r\n        <div className={style.Main}>\r\n            <h2 className=\"visuallyHidden\">Exchange rates</h2>\r\n            <div className={style.baseCurrency}>\r\n                <p>Your base currency: {props.exchange.baseApp}</p>\r\n            </div>\r\n            <table>\r\n                <tbody>\r\n                    <tr><th>From</th><th>To</th></tr>\r\n                    {table}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exchange;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.exchangerate.host/latest'\r\n})\r\n\r\nexport const currencyAPI = {\r\n    getArrRates(baseArr, symbols) {\r\n        return axios.all(baseArr.map(result => {\r\n            return instance.get(\"?base=\" + result + \"&symbols=\" + symbols)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        }))\r\n    },\r\n\r\n    convert(base, interest, value) {\r\n        return instance.get(\"?base=\" + base + \"&symbols=\" + interest + \"&amount=\" + value)\r\n            .then(response => {\r\n                console.log(response.data.rates[interest])\r\n                return response.data.rates[interest]\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {currencyAPI} from \"../api/api\";\r\n\r\nconst ADD_BASE_CURRENCY = 'C/SRC/REDUX/EXCHANGE_REDUCER/ADD_BASE_CURRENCY';\r\nconst ADD_ACTUAL_RATES = 'C/SRC/REDUX/EXCHANGE_REDUCER/ADD_ACTUAL_RATES'\r\n\r\nlet initialState = {\r\n    baseApp: 'USD',\r\n    interests: ['USD','EUR','RUB'],\r\n    actualRates: [],\r\n    isFetching: false\r\n}\r\n\r\nconst exchangeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_BASE_CURRENCY: {\r\n            return  {\r\n                ...state,\r\n                baseApp: action.base\r\n            }\r\n        }\r\n        case ADD_ACTUAL_RATES: {\r\n            return  {\r\n                ...state,\r\n                actualRates: [...action.actualRates]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setBaseAC = (base) => ({type: ADD_BASE_CURRENCY, base});\r\nexport const getActualRatesAC = (actualRates) => ({type: ADD_ACTUAL_RATES, actualRates});\r\n\r\n\r\nexport const setActualRatesTC = (interests, baseApp) => {\r\n    return (dispatch) => {\r\n        dispatch(setBaseAC(baseApp))\r\n        currencyAPI.getArrRates(interests, baseApp).then(response => {\r\n                dispatch(getActualRatesAC(response))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default exchangeReducer;\r\n\r\n\r\n","import Exchange from \"./Exchange\";\r\nimport {connect} from \"react-redux\";\r\nimport {setActualRatesTC} from \"../../redux/exchangeReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        exchange: state.exchangePage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActualRates: (interests, baseApp) => {\r\n            dispatch(setActualRatesTC(interests, baseApp))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Exchange)\r\n","import style from \"./Converter.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\n// base, interest, value\r\nconst Converter = (props) => {\r\n\r\n    let [value, setValue] = useState(false)\r\n\r\n    let sendDataToConvert = (value) => {\r\n        let base = value.slice(-10, -7).toUpperCase()\r\n        let interest = value.slice(-3).toUpperCase()\r\n        let requiredValue = parseFloat(value)\r\n        props.getConvert(base, interest, requiredValue)\r\n    }\r\n\r\n    let onEnterPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n            sendDataToConvert(value)\r\n        }\r\n    }\r\n\r\n    let onValueChange = (e) => {\r\n        setValue(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={style.Main}>\r\n            <h2 className=\"visuallyHidden\">Currency converter</h2>\r\n            <div className={style.inputSection}>\r\n                <p>Enter data on field below in the required format and press enter\r\n                    <br/>\r\n                    Example: <strong>15 usd in rub</strong>\r\n                </p>\r\n\r\n                <div>\r\n                    <input autoFocus={'true'}\r\n                           onKeyPress={onEnterPress}\r\n                           onChange={onValueChange}\r\n                           type=\"text\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.outputSection}>\r\n                <p>result</p>\r\n                <output name=\"result\">\r\n                    {(props.converter.result === undefined || props.converter.result === null)\r\n                        ? 'respect the format'\r\n                        : props.converter.result.toFixed(3)\r\n                    }\r\n\r\n                </output>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Converter;","import {currencyAPI} from \"../api/api\";\r\n\r\nconst CURRENCY_CONVERT = 'C/SRC/REDUX/CONVERT_REDUCER/CURRENCY_CONVERT';\r\nconst CURRENCY_CONVERT_STATE = 'C/SRC/REDUX/CONVERT_REDUCER/CURRENCY_CONVERT_STATE'\r\n\r\nlet initialState = {\r\n    base: '',\r\n    interest: '',\r\n    result: 0,\r\n    isFetching: false\r\n}\r\n\r\nconst converterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CURRENCY_CONVERT_STATE: {\r\n            return  {\r\n                ...state,\r\n                base: action.base,\r\n                interest: action.interest\r\n            }\r\n        }\r\n        case CURRENCY_CONVERT: {\r\n            return  {\r\n                ...state,\r\n                result: action.result,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getConvertAC = (result) => ({type: CURRENCY_CONVERT, result});\r\nexport const getConvertStateAC = (base, interest) => ({type: CURRENCY_CONVERT, base, interest});\r\n\r\nexport const getConvertTC = (base, interest, value) => {\r\n    return (dispatch) => {\r\n        dispatch(getConvertStateAC(base, interest))\r\n        currencyAPI.convert(base, interest, value).then(response => {\r\n            dispatch(getConvertAC(response))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default converterReducer;\r\n\r\n\r\n\r\n","import Converter from \"./Converter\";\r\nimport {connect} from \"react-redux\";\r\nimport {getConvertTC} from \"../../redux/converterReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        converter: state.converterPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getConvert: (base, interest, value) => {\r\n            dispatch(getConvertTC(base, interest, value))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Converter)\r\n","import React from \"react\";\nimport './App.css';\nimport {Redirect, Route} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport ExchangeContainer from \"./components/Exchange/ExchangeContainer\";\nimport ConverterContainer from \"./components/Converter/ConverterContainer\";\n\nfunction App() {\n\n    let Exchange = () => <ExchangeContainer/>\n    let Converter = () => <ConverterContainer/>\n\n    return (\n        <div className=\"App\">\n            <div className=\"appWrapper\">\n                <Header/>\n                <Redirect from=\"/\" to=\"/exchange\" />\n                <Route render={Exchange} exact path=\"/exchange\"/>\n                <Route render={Converter} exact path=\"/converter\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport exchangeReducer from \"./exchangeReducer\";\r\nimport converterReducer from \"./converterReducer\";\r\n\r\nlet reducers = combineReducers({\r\n        exchangePage: exchangeReducer,\r\n        converterPage: converterReducer\r\n    }\r\n)\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport default store;","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\"\nimport ReactDOM from \"react-dom\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}